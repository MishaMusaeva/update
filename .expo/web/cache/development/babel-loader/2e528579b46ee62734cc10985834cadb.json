{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Native\\\\mantis\\\\components\\\\Game\\\\index.js\";\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState, useEffect } from 'react';\nimport bg from \"../image/bg1.png\";\nimport plus from \"../image/plus.png\";\nimport seven from \"../image/seven.png\";\n\nvar padTime = function padTime(time) {\n  return String(time).length === 1 ? \"0\" + time : \"\" + time;\n};\n\nvar format = function format(time) {\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n  return minutes + \":\" + padTime(seconds);\n};\n\nexport default function Game(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      level = _route$params.level,\n      operator = _route$params.operator;\n\n  var _React$useState = React.useState(700),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      counter = _React$useState2[0],\n      setCounter = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timer;\n\n    if (counter > 0) {\n      timer = setTimeout(function () {\n        return setCounter(function (c) {\n          return c - 1;\n        });\n      }, 1000);\n    }\n\n    return function () {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [counter]);\n  var maxNum = 3;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      num = _useState4[0],\n      setNum = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      result = _useState6[0],\n      setResult = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      check = _useState8[0],\n      setCheck = _useState8[1];\n\n  var arr = [];\n  var summ = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    summ += data[i];\n  }\n\n  var changeEquation = function changeEquation() {\n    arr = [];\n\n    for (var _i = 0; _i < maxNum; _i++) {\n      arr.push(Math.floor(Math.random() * 99));\n      setData(_toConsumableArray(arr));\n      console.log(arr);\n    }\n\n    setNum(0);\n  };\n\n  var nextNum = function nextNum() {\n    num == maxNum ? alert('vse') : setNum(num + 1);\n  };\n\n  var proverka = function proverka() {\n    if (check == summ) alert('verno');else alert('neverno');\n  };\n\n  useEffect(function () {\n    changeEquation();\n  }, []);\n  var valueBtn = [{\n    textNext: 'Next',\n    textChek: 'Check',\n    textExample: 'Next Example'\n  }];\n  return React.createElement(View, {\n    style: styles.game,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: bg,\n    style: styles.gamePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.textLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Easy level\"), React.createElement(View, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, counter === 0 ? navigation.navigate('Result') : \"Timer: \" + format(counter))), React.createElement(Image, {\n    style: styles.plus,\n    source: plus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.second,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"seconds left\"), React.createElement(TextInput, {\n    type: \"text\",\n    value: summ,\n    style: styles.randomNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), num == maxNum ? React.createElement(React.Fragment, null, React.createElement(TextInput, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setCheck(e.target.value);\n    },\n    value: check,\n    style: styles.randomNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return proverka();\n    },\n    style: styles.next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.nextText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Check\"))) : React.createElement(React.Fragment, null, React.createElement(TextInput, {\n    style: styles.randomNumber,\n    value: data[num],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return nextNum();\n    },\n    style: styles.next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.nextText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Next\")))));\n}\nvar styles = StyleSheet.create({\n  game: {\n    flex: 1\n  },\n  gamePhoto: {\n    height: '100%',\n    width: '100%'\n  },\n  textLevel: {\n    width: '80%',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: '15%',\n    marginLeft: '10%'\n  },\n  plus: {\n    width: 45,\n    height: 45\n  },\n  level: {\n    color: '#0186BF',\n    fontSize: 35\n  },\n  second: {\n    color: '#0186BF',\n    textAlign: 'center',\n    fontSize: 27,\n    marginBottom: '5%'\n  },\n  randomNumber: {\n    width: 150,\n    height: 150,\n    backgroundColor: 'rgba(175,212,113,0.2)',\n    borderWidth: 1,\n    borderColor: 'rgba(175,212,113,1)',\n    borderRadius: 25,\n    marginBottom: '5%',\n    marginLeft: '30%'\n  },\n  seven: {\n    width: 100,\n    flex: 1,\n    justifyContent: 'center',\n    marginLeft: '20%'\n  },\n  next: {\n    marginLeft: '10%',\n    width: 300,\n    height: 40,\n    borderRadius: 50,\n    backgroundColor: '#AFD471',\n    marginBottom: '70%'\n  },\n  nextText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Native/mantis/components/Game/index.js"],"names":["React","useState","useEffect","bg","plus","seven","padTime","time","String","length","format","minutes","Math","floor","seconds","Game","navigation","route","params","level","operator","counter","setCounter","timer","setTimeout","c","clearTimeout","maxNum","data","setData","num","setNum","result","setResult","check","setCheck","arr","summ","i","changeEquation","push","random","console","log","nextNum","alert","proverka","valueBtn","textNext","textChek","textExample","styles","game","gamePhoto","textLevel","navigate","second","randomNumber","e","target","value","next","nextText","StyleSheet","create","flex","height","width","flexDirection","justifyContent","marginTop","marginLeft","color","fontSize","textAlign","marginBottom","backgroundColor","borderWidth","borderColor","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { ImageBackground, StyleSheet, Text, TouchableOpacity, View, Image, TextInput } from 'react-native'\r\nimport { useState, useEffect } from 'react'\r\nimport bg from '../image/bg1.png'\r\nimport plus from '../image/plus.png'\r\nimport seven from '../image/seven.png'\r\n\r\n\r\nconst padTime = (time) => {\r\n  return String(time).length === 1 ? `0${time}` : `${time}`;\r\n};\r\n\r\nconst format = (time) => {\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n  return `${minutes}:${padTime(seconds)}`;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Game({ navigation, route }) {\r\n  const { level, operator } = route.params\r\n  const [counter, setCounter] = React.useState(700);\r\n  React.useEffect(() => {\r\n    let timer;\r\n    if (counter > 0) {\r\n      timer = setTimeout(() => setCounter((c) => c - 1), 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n\r\n      }\r\n    };\r\n  }, [counter]);\r\n\r\n  const maxNum = 3\r\n  const [data, setData] = useState([])\r\n  const [num, setNum] = useState(0)\r\n  const [result, setResult] = useState()\r\n  const [check, setCheck] = useState('')\r\n\r\n  let arr = []\r\n\r\n  let summ = 0\r\n  for (let i = 0; i < data.length; i++) {\r\n    summ+=data[i]\r\n  }\r\n \r\n\r\n\r\n  const changeEquation = () => {\r\n    arr = []\r\n    for (let i = 0; i < maxNum; i++) {\r\n      arr.push(Math.floor(Math.random() * 99))\r\n      setData([...arr])\r\n      console.log(arr)\r\n    }\r\n    setNum(0)\r\n  }\r\n\r\n\r\n\r\n  const nextNum = () => {\r\n\r\n    num == maxNum ? alert('vse') : setNum(num + 1)\r\n  }\r\n  const proverka = () => {\r\n    if (check == summ) alert('verno')\r\n    else alert('neverno')\r\n  }\r\n  useEffect(() => {\r\n    changeEquation()\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const valueBtn = [\r\n    {\r\n      textNext: 'Next',\r\n      textChek: 'Check',\r\n      textExample: 'Next Example'\r\n    }\r\n  ]\r\n\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <View style={styles.game}>\r\n      <ImageBackground source={bg} style={styles.gamePhoto}>\r\n        <View style={styles.textLevel}>\r\n          <Text style={styles.level}>Easy level</Text>\r\n          <View className=\"App\">\r\n            <Text>{counter === 0 ? navigation.navigate('Result') : `Timer: ${format(counter)}`}</Text>\r\n          </View>\r\n          <Image style={styles.plus} source={plus} />\r\n        </View>\r\n        <View>\r\n          <Text style={styles.second}>seconds left</Text>\r\n          <TextInput type=\"text\" value={summ} style={styles.randomNumber} />\r\n\r\n\r\n        </View>\r\n\r\n        {\r\n          num == maxNum ?\r\n            <>\r\n              <TextInput type=\"text\" onChange={e => setCheck(e.target.value)} value={check} style={styles.randomNumber} />\r\n              <TouchableOpacity onPress={() => proverka()} style={styles.next}>\r\n                <Text style={styles.nextText} >\r\n                  Check\r\n                          </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n            :\r\n            <>\r\n              <TextInput style={styles.randomNumber} value={data[num]} />\r\n              <TouchableOpacity onPress={() => nextNum()} style={styles.next}>\r\n                <Text style={styles.nextText} >\r\n                  Next\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n        }\r\n      </ImageBackground>\r\n    </View>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  game: {\r\n    flex: 1,\r\n  },\r\n  gamePhoto: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  textLevel: {\r\n    width: '80%',\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: '15%',\r\n    marginLeft: '10%'\r\n  },\r\n  plus: {\r\n    width: 45,\r\n    height: 45,\r\n\r\n  },\r\n  level: {\r\n    color: '#0186BF',\r\n    fontSize: 35,\r\n  },\r\n  second: {\r\n    color: '#0186BF',\r\n    textAlign: 'center',\r\n    fontSize: 27,\r\n    marginBottom: '5%'\r\n    // marginTop: 80,\r\n  },\r\n  randomNumber: {\r\n    width: 150,\r\n    height: 150,\r\n    backgroundColor: 'rgba(175,212,113,0.2)',\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(175,212,113,1)',\r\n    borderRadius: 25,\r\n    marginBottom: '5%',\r\n    marginLeft: '30%',\r\n  },\r\n  seven: {\r\n    width: 100,\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    marginLeft: '20%'\r\n  },\r\n  next: {\r\n    // marginTop: 45,\r\n    marginLeft: '10%',\r\n    width: 300,\r\n    height: 40,\r\n    borderRadius: 50,\r\n    backgroundColor: '#AFD471',\r\n    marginBottom: '70%'\r\n\r\n  },\r\n  nextText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontSize: 25,\r\n  },\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}