{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alibejsenbekov/Desktop/Game/Kids_game/components/Game/index.js\";\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState, useEffect } from 'react';\nimport bg from \"../image/bg1.png\";\n\nvar padTime = function padTime(time) {\n  return String(time).length === 1 ? \"0\" + time : \"\" + time;\n};\n\nvar format = function format(time) {\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n  return minutes + \":\" + padTime(seconds);\n};\n\nexport default function Game(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      operator = _route$params.operator,\n      maxNum = _route$params.maxNum,\n      level = _route$params.level;\n\n  var _React$useState = React.useState(700),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      counter = _React$useState2[0],\n      setCounter = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timer;\n\n    if (counter > 0) {\n      timer = setTimeout(function () {\n        return setCounter(function (c) {\n          return c - 1;\n        });\n      }, 1000);\n    }\n\n    return function () {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [counter]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      num = _useState4[0],\n      setNum = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      check = _useState6[0],\n      setCheck = _useState6[1];\n\n  var arr = [];\n  var summ = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    summ += data[i];\n  }\n\n  var changeEquation = function changeEquation() {\n    arr = [];\n\n    for (var _i = 0; _i < maxNum; _i++) {\n      arr.push(Math.floor(Math.random() * 99));\n      setData(_toConsumableArray(arr));\n      console.log(arr);\n    }\n\n    setNum(0);\n  };\n\n  var nextNum = function nextNum() {\n    num == maxNum ? alert('vse') : setNum(num + 1);\n  };\n\n  var proverka = function proverka() {\n    if (check == summ) alert('verno');else alert('neverno');\n  };\n\n  useEffect(function () {\n    changeEquation();\n  }, []);\n  var valueBtn = [{\n    textNext: 'Next',\n    textChek: 'Check',\n    textExample: 'Next Example'\n  }];\n  return React.createElement(View, {\n    style: styles.game,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: bg,\n    style: styles.gamePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.textLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, counter === 0 ? navigation.navigate('Result') : \"Timer: \" + format(counter))), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Option \", operator), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, level, \" level\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    type: \"text\",\n    value: summ,\n    style: styles.randomNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), num == maxNum ? React.createElement(React.Fragment, null, React.createElement(TextInput, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setCheck(e.target.value);\n    },\n    value: check,\n    style: styles.randomNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return proverka();\n    },\n    style: styles.next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.nextText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Check\"))) : React.createElement(React.Fragment, null, React.createElement(TextInput, {\n    style: styles.randomNumber,\n    value: data[num],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return nextNum();\n    },\n    style: styles.next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.nextText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Next\")))));\n}\nvar styles = StyleSheet.create({\n  game: {\n    flex: 1\n  },\n  gamePhoto: {\n    height: '100%',\n    width: '100%'\n  },\n  textLevel: {\n    width: '80%',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: '15%',\n    marginLeft: '10%'\n  },\n  plus: {\n    width: 45,\n    height: 45\n  },\n  level: {\n    color: '#0186BF',\n    fontSize: 35\n  },\n  second: {\n    color: '#0186BF',\n    textAlign: 'center',\n    fontSize: 27,\n    marginBottom: '5%'\n  },\n  randomNumber: {\n    width: 150,\n    height: 150,\n    backgroundColor: 'rgba(175,212,113,0.2)',\n    borderWidth: 1,\n    borderColor: 'rgba(175,212,113,1)',\n    borderRadius: 25,\n    marginBottom: '5%',\n    marginLeft: '30%'\n  },\n  seven: {\n    width: 100,\n    flex: 1,\n    justifyContent: 'center',\n    marginLeft: '20%'\n  },\n  next: {\n    marginLeft: '10%',\n    width: 300,\n    height: 40,\n    borderRadius: 50,\n    backgroundColor: '#AFD471',\n    marginBottom: '70%'\n  },\n  nextText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["/Users/alibejsenbekov/Desktop/Game/Kids_game/components/Game/index.js"],"names":["React","useState","useEffect","bg","padTime","time","String","length","format","minutes","Math","floor","seconds","Game","navigation","route","params","operator","maxNum","level","counter","setCounter","timer","setTimeout","c","clearTimeout","data","setData","num","setNum","check","setCheck","arr","summ","i","changeEquation","push","random","console","log","nextNum","alert","proverka","valueBtn","textNext","textChek","textExample","styles","game","gamePhoto","textLevel","navigate","randomNumber","e","target","value","next","nextText","StyleSheet","create","flex","height","width","flexDirection","justifyContent","marginTop","marginLeft","plus","color","fontSize","second","textAlign","marginBottom","backgroundColor","borderWidth","borderColor","borderRadius","seven"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ImageBackground, StyleSheet, Text, TouchableOpacity, View, Image, TextInput } from 'react-native'\nimport { useState, useEffect } from 'react'\nimport bg from '../image/bg1.png'\n\n\n\nconst padTime = (time) => {\n  return String(time).length === 1 ? `0${time}` : `${time}`;\n};\n\nconst format = (time) => {\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  return `${minutes}:${padTime(seconds)}`;\n};\n\n\n\n\n\n\nexport default function Game({ navigation, route }) {\n  const{operator, maxNum, level} = route.params\n  const [counter, setCounter] = React.useState(700);\n  React.useEffect(() => {\n    let timer;\n    if (counter > 0) {\n      timer = setTimeout(() => setCounter((c) => c - 1), 1000);\n    }\n\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n\n      }\n    };\n  }, [counter]);\n\n  const [data, setData] = useState([])\n  const [num, setNum] = useState(0)\n  const [check, setCheck] = useState('')\n\n  let arr = []\n\nlet summ = 0\n\n\n  for (let i = 0; i < data.length; i++) {\n    summ+=data[i]\n  }\n  \n\n\n\n\n\n  const changeEquation = () => {\n    arr = []\n    for (let i = 0; i < maxNum; i++) {\n      arr.push(Math.floor(Math.random() * 99))\n      setData([...arr])\n      console.log(arr)\n    }\n    setNum(0)\n  }\n\n\n\n  const nextNum = () => {\n\n    num == maxNum ? alert('vse') : setNum(num + 1)\n  }\n  \n  const proverka = () => {\n    if (check == summ) alert('verno')\n    else alert('neverno')\n  }\n  useEffect(() => {\n    changeEquation()\n  }, [])\n\n\n\n\n\n\n\n  const valueBtn = [\n    {\n      textNext: 'Next',\n      textChek: 'Check',\n      textExample: 'Next Example'\n    }\n  ]\n\n\n\n\n  \n\n  return (\n\n    <View style={styles.game}>\n      <ImageBackground source={bg} style={styles.gamePhoto}>\n        <View style={styles.textLevel}>\n     \n          <View className=\"App\">\n            <Text>{counter === 0 ? navigation.navigate('Result') : `Timer: ${format(counter)}`}</Text>\n          </View>\n          <Text>Option {operator}</Text>  \n                <Text>{level} level</Text> \n        </View>\n        <View>\n          <TextInput type=\"text\" value={summ} style={styles.randomNumber} />\n\n\n        </View>\n\n        {\n          num == maxNum ?\n            <>\n              <TextInput type=\"text\" onChange={e => setCheck(e.target.value)} value={check} style={styles.randomNumber} />\n              <TouchableOpacity onPress={() => proverka()} style={styles.next}>\n                <Text style={styles.nextText} >\n                  Check\n                          </Text>\n              </TouchableOpacity>\n            </>\n            :\n            <>\n              <TextInput style={styles.randomNumber} value={data[num]} />\n              <TouchableOpacity onPress={() => nextNum()} style={styles.next}>\n                <Text style={styles.nextText} >\n                  Next\n                </Text>\n              </TouchableOpacity>\n            </>\n        }\n      </ImageBackground>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  game: {\n    flex: 1,\n  },\n  gamePhoto: {\n    height: '100%',\n    width: '100%'\n  },\n  textLevel: {\n    width: '80%',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: '15%',\n    marginLeft: '10%'\n  },\n  plus: {\n    width: 45,\n    height: 45,\n\n  },\n  level: {\n    color: '#0186BF',\n    fontSize: 35,\n  },\n  second: {\n    color: '#0186BF',\n    textAlign: 'center',\n    fontSize: 27,\n    marginBottom: '5%'\n    // marginTop: 80,\n  },\n  randomNumber: {\n    width: 150,\n    height: 150,\n    backgroundColor: 'rgba(175,212,113,0.2)',\n    borderWidth: 1,\n    borderColor: 'rgba(175,212,113,1)',\n    borderRadius: 25,\n    marginBottom: '5%',\n    marginLeft: '30%',\n  },\n  seven: {\n    width: 100,\n    flex: 1,\n    justifyContent: 'center',\n    marginLeft: '20%'\n  },\n  next: {\n    // marginTop: 45,\n    marginLeft: '10%',\n    width: 300,\n    height: 40,\n    borderRadius: 50,\n    backgroundColor: '#AFD471',\n    marginBottom: '70%'\n\n  },\n  nextText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 25,\n  },\n\n})\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}