{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alibejsenbekov/Desktop/Game/mentis/components/Game/index.js\";\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState, useEffect } from 'react';\nimport bg from \"../image/bg1.png\";\nimport plus from \"../image/plus.png\";\nimport seven from \"../image/seven.png\";\n\nvar padTime = function padTime(time) {\n  return String(time).length === 1 ? \"0\" + time : \"\" + time;\n};\n\nvar format = function format(time) {\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n  return minutes + \":\" + padTime(seconds);\n};\n\nexport default function Game(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      level = _route$params.level,\n      operator = _route$params.operator;\n\n  var _React$useState = React.useState(700),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      counter = _React$useState2[0],\n      setCounter = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timer;\n\n    if (counter > 0) {\n      timer = setTimeout(function () {\n        return setCounter(function (c) {\n          return c - 1;\n        });\n      }, 1000);\n    }\n\n    return function () {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [counter]);\n  var maxNum = 10;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      num = _useState4[0],\n      setNum = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      result = _useState6[0],\n      setResult = _useState6[1];\n\n  var arr = [];\n  var summ = data[0] + data[1] + data[2];\n\n  var changeEquation = function changeEquation() {\n    arr = [];\n\n    for (var i = 0; i < maxNum; i++) {\n      arr.push(Math.floor(Math.random() * 99));\n      setData(_toConsumableArray(arr));\n    }\n\n    setNum(0);\n  };\n\n  var nextNum = function nextNum() {};\n\n  var proverka = function proverka() {\n    if (result == summ) alert('verno');else alert('neverno');\n  };\n\n  useEffect(function () {\n    changeEquation();\n  }, []);\n  var valueBtn = [{\n    textNext: 'Next',\n    textChek: 'Check',\n    textExample: 'Next Example'\n  }];\n  return React.createElement(View, {\n    style: styles.game,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: bg,\n    style: styles.gamePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.textLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Easy level\"), React.createElement(View, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, counter === 0 ? navigation.navigate('Result') : \"Timer: \" + format(counter))), React.createElement(Image, {\n    style: styles.plus,\n    source: plus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 20\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.second,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"seconds left\")), num == maxNum - 1 ? React.createElement(TextInput, {\n    style: styles.randomNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 43\n    }\n  }, \" \") : value = data[num], React.createElement(TouchableOpacity, {\n    style: styles.next,\n    onPress: nextNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.nextText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, num !== maxNum - 1 ? valueBtn[0].textNext : valueBtn[0].textChek))));\n}\nvar styles = StyleSheet.create({\n  game: {\n    flex: 1\n  },\n  gamePhoto: {\n    height: '100%',\n    width: '100%'\n  },\n  textLevel: {\n    width: '80%',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: '15%',\n    marginLeft: '10%'\n  },\n  plus: {\n    width: 45,\n    height: 45\n  },\n  level: {\n    color: '#0186BF',\n    fontSize: 35\n  },\n  second: {\n    color: '#0186BF',\n    textAlign: 'center',\n    fontSize: 27,\n    marginBottom: '5%'\n  },\n  randomNumber: {\n    width: 150,\n    height: 150,\n    backgroundColor: 'rgba(175,212,113,0.2)',\n    borderWidth: 1,\n    borderColor: 'rgba(175,212,113,1)',\n    borderRadius: 25,\n    marginBottom: '5%',\n    marginLeft: '30%'\n  },\n  seven: {\n    width: 100,\n    flex: 1,\n    justifyContent: 'center',\n    marginLeft: '20%'\n  },\n  next: {\n    marginLeft: '10%',\n    width: 300,\n    height: 40,\n    borderRadius: 50,\n    backgroundColor: '#AFD471',\n    marginBottom: '70%'\n  },\n  nextText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["/Users/alibejsenbekov/Desktop/Game/mentis/components/Game/index.js"],"names":["React","useState","useEffect","bg","plus","seven","padTime","time","String","length","format","minutes","Math","floor","seconds","Game","navigation","route","params","level","operator","counter","setCounter","timer","setTimeout","c","clearTimeout","maxNum","data","setData","num","setNum","result","setResult","arr","summ","changeEquation","i","push","random","nextNum","proverka","alert","valueBtn","textNext","textChek","textExample","styles","game","gamePhoto","textLevel","navigate","second","randomNumber","value","next","nextText","StyleSheet","create","flex","height","width","flexDirection","justifyContent","marginTop","marginLeft","color","fontSize","textAlign","marginBottom","backgroundColor","borderWidth","borderColor","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ImageBackground, StyleSheet, Text, TouchableOpacity, View, Image, TextInput } from 'react-native'\nimport {useState,useEffect} from 'react'\nimport bg from '../image/bg1.png'\nimport plus from '../image/plus.png'\nimport seven from '../image/seven.png'\n\n\nconst padTime = (time) => {\n    return String(time).length === 1 ? `0${time}` : `${time}`;\n  };\n  \n  const format = (time) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes}:${padTime(seconds)}`;\n  };\n\n\n\n\n\n\nexport default function Game({navigation, route}) {  \n    const{level, operator} = route.params\n    const [counter, setCounter] = React.useState(700);\n    React.useEffect(() => {\n      let timer;\n      if (counter > 0) {\n        timer = setTimeout(() => setCounter((c) => c - 1), 1000);\n      }\n  \n      return () => {\n        if (timer) {\n          clearTimeout(timer);\n          \n        }\n      };\n    }, [counter]);\n\n    const maxNum = 10\nconst [data, setData] = useState([])\nconst [num, setNum] = useState(0)\nconst [result, setResult]=useState()\n\n\nlet arr = []\n\nlet summ=data[0]+data[1]+data[2]\n\n\nconst changeEquation = () => {\n  arr = []\n \n  for (let i = 0; i < maxNum; i++) {\n    arr.push(Math.floor(Math.random() * 99))\n    setData([...arr])\n  }\n  setNum(0)\n}\n\n\n\nconst nextNum = () => {\n\n//  num == maxNum- 1 ? alert('vse') :setNum(num + 1)\n}\nconst proverka = ()=> {\n        if (result == summ) alert('verno')\n        else  alert('neverno')\n}\nuseEffect(() => {\n  changeEquation()\n}, [])\n\n\n\n\nconst valueBtn = [\n  {\n    textNext:'Next',\n    textChek:'Check',\n    textExample:'Next Example'\n  }\n]\n\n  \n    return (\n    \n        <View style={styles.game}>\n        <ImageBackground source={bg} style={styles.gamePhoto}>\n        <View style={styles.textLevel}>\n            <Text style={styles.level}>Easy level</Text>\n            <View className=\"App\">\n        <Text>{counter === 0 ?  navigation.navigate('Result') : `Timer: ${format(counter)}`}</Text>\n      </View>\n                   <Image style={styles.plus} source={plus}/>\n        </View>\n          <View>\n              <Text style={styles.second}>seconds left</Text>\n          </View>\n                   \n                      {\n                       \n                        num == maxNum- 1 ?<TextInput style={styles.randomNumber}  > </TextInput> : value=data[num]\n                      }\n                   \n            <TouchableOpacity style={styles.next} \n            onPress={nextNum}\n\n            >\n        <Text style={styles.nextText}>\n        \n        {/* {valueBtn.textNext} */}\n\n        {\n          num !== maxNum- 1 ? valueBtn[0].textNext : valueBtn[0].textChek\n          \n\n        }\n        \n\n        </Text>\n            </TouchableOpacity>\n\n            {/* <TouchableOpacity style={styles.next} \n             onPress={changeEquation}>\n             <Text style={styles.nextText}>NEXT Exemple</Text>\n            </TouchableOpacity> */}\n            \n            </ImageBackground>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    game: {\n        flex: 1,\n    },\n    gamePhoto: {\n        height: '100%',\n        width: '100%'\n    },\n    textLevel: {\n        width: '80%',\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-around', \n        marginTop: '15%',\n        marginLeft: '10%'  \n    },\n    plus: {\n        width: 45,\n        height: 45,\n        \n    },\n    level: {\n       color: '#0186BF',\n       fontSize: 35,  \n    },\n    second: {\n        color: '#0186BF',\n        textAlign: 'center',\n        fontSize: 27,\n        marginBottom: '5%'\n        // marginTop: 80,\n     },\n     randomNumber: {\n        width: 150,\n        height: 150,\n        backgroundColor: 'rgba(175,212,113,0.2)',\n        borderWidth: 1,\n        borderColor: 'rgba(175,212,113,1)',\n        borderRadius: 25,\n        marginBottom: '5%',\n        marginLeft: '30%',\n    },\n    seven: {\n        width: 100,\n        flex: 1,\n        justifyContent: 'center',\n        marginLeft: '20%'\n    },\n      next: {\n        // marginTop: 45,\n        marginLeft: '10%',\n        width: 300,\n        height: 40, \n       borderRadius: 50,\n       backgroundColor: '#AFD471',\n       marginBottom: '70%'\n\n    },\n    nextText: {\n        color: 'white',\n        textAlign: 'center',\n        fontSize: 25,\n     },\n \n})\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}